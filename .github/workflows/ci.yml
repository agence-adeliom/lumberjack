name: CI

on:
  pull_request:
    branches:
      - '*.x'
  push:
    branches:
      - '*.x'

concurrency:
  group: ${{ github.sha }}
  #cancel-in-progress: true

permissions:
  pull-requests: write
  issues: write
  repository-projects: write
  contents: write

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        php-versions: [ '8.0', '8.1' ]
        node-versions: [ '16' ]
    steps:
      - uses: actions/checkout@v3

      #      - name: Setup upterm session
      #        uses: lhotari/action-upterm@v1
      #        with:
      #          limit-access-to-actor: true

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php-versions }}
          coverage: xdebug

      - run: rm composer.lock

      - name: Get Composer Cache Directory
        id: composer-cache
        run: |
          echo "::set-output name=dir::$(composer config cache-files-dir)"

      - uses: actions/cache@v3
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          key: ${{ runner.os }}-composer-${{ matrix.php-versions }}-${{ hashFiles('**/composer.json') }}
          restore-keys: |
            ${{ runner.os }}-composer-${{ matrix.php-versions }}

      - run: composer config http-basic.gf-composer-proxy.arnaud-ritti.workers.dev licensekey ${{secrets.ORG_GRAVITYFORMS_KEY}}
      - run: composer config http-basic.auth-acf-composer-proxy.pivvenit.net licensekey ${{secrets.ORG_ACF_PRO_KEY}}

      - name: Check Composer lock file is up to date
        run: composer validate --no-check-all

      - name: Install Composer dependencies
        run: composer install --no-progress --prefer-dist --optimize-autoloader

      - name: Run PHP test suite
        run: composer run-script test

      - uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-versions }}
          cache: npm

      - name: Install NPM dependencies
        run: npm ci

      - name: Run NPM test suite
        run: npm run test --if-present

      - name: Install theme dependencies
        run: npm run theme install

      - name: Try to build theme's assets
        run: npm run theme run build:production --if-present

  auto_approve_and_merge:
    runs-on: ubuntu-latest
    needs: [ build ]
    if: ${{ github.event.pull_request.user.login == 'dependabot[bot]' }}
    env:
      PR_URL: ${{github.event.pull_request.html_url}}
      GITHUB_TOKEN: "${{ secrets.GITHUB_TOKEN }}"
    steps:
      - uses: actions/checkout@v3

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: 'latest'

      - name: Fetch Dependabot metadata
        id: metadata
        uses: dependabot/fetch-metadata@v1.3.5
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}

      - name: Enable auto-approve for Dependabot PRs
        run: gh pr review --approve "$PR_URL"

      - name: Enable auto-merge for Dependabot PRs
        if: |
          steps.metadata.outputs.update-type != 'version-update:semver-major'
          || (steps.package && contains('["wordpress-muplugin", "wordpress-plugin", "wordpress-language"]', steps.package.outputs.type))
          || steps.metadata.outputs.dependency-names == 'roots/wordpress'
        run: gh pr merge --auto --merge "$PR_URL"

