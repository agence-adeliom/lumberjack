name: CI

on:
  # Trigger on Pull Requests against the master branch.
  pull_request_target:
    branches:
      - main
      - master
  # Trigger on Pull Requests to the master branch.
  push:
    branches:
      - main
      - master

concurrency:
  group: ${{ github.sha }}

permissions:
  pull-requests: write
  issues: write
  repository-projects: write
  contents: write

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

#      - name: Setup upterm session
#        uses: lhotari/action-upterm@v1
#        with:
#          limit-access-to-actor: true

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.1'
          coverage: xdebug

      - name: Get Composer Cache Directory
        id: composer-cache
        run: |
          echo "::set-output name=dir::$(composer config cache-files-dir)"

      - uses: actions/cache@v3
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: |
            ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}

      - name: Check Composer lock file is up to date
        run: composer validate --no-check-all

      - name: Install Composer dependencies
        run: composer install --no-progress --prefer-dist --optimize-autoloader

#      - name: Run PHP test suite
#        run: composer run-script test

      - uses: actions/setup-node@v3
        with:
          node-version: '16'
          cache: npm

      - name: Install NPM dependencies
        run: npm ci

      - name: Run NPM test suite
        run: npm run test --if-present

      - name: Try to build theme's assets
        run: npm run build --if-present

  auto_approve_and_merge:
    runs-on: ubuntu-latest
    needs: [ build ]
    if: ${{ github.event.pull_request.user.login == 'dependabot[bot]' }}
    env:
      PR_URL: ${{github.event.pull_request.html_url}}
      GITHUB_TOKEN: "${{ secrets.GITHUB_TOKEN }}"
    steps:
      - uses: actions/checkout@v3

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.1'

      - name: Fetch Dependabot metadata
        id: metadata
        uses: dependabot/fetch-metadata@v1.3.3
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}

      - name: Add a label for direct dependencies
        continue-on-error: true
        if: startsWith(steps.metadata.outputs.dependency-type, 'direct')
        run: gh pr edit "$PR_URL" --add-label "direct"
      - name: Add a label for indirect dependencies
        continue-on-error: true
        if: startsWith(steps.metadata.outputs.dependency-type, 'indirect')
        run: gh pr edit "$PR_URL" --add-label "indirect"
      - name: Add a label production dependencies
        continue-on-error: true
        if: contains(steps.metadata.outputs.dependency-type, 'production')
        run: gh pr edit "$PR_URL" --add-label "production"
      - name: Add a label for development dependencies
        continue-on-error: true
        if: contains(steps.metadata.outputs.dependency-type, 'development')
        run: gh pr edit "$PR_URL" --add-label "development"
      - name: Add a label for security PRs
        continue-on-error: true
        if: steps.metadata.outputs.dependency-type.ghsa-id
        run: gh pr edit "$PR_URL" --add-label "security"

      - name: Enable auto-approve for Dependabot PRs
        run: gh pr review --approve "$PR_URL"

      - name: Enable auto-merge for Dependabot PRs
        if: steps.metadata.outputs.update-type != 'version-update:semver-major'
        run: gh pr merge --auto --merge "$PR_URL"

